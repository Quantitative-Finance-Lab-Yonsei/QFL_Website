{"ast":null,"code":"var _jsxFileName = \"/Users/gangminlee/Projects/QFL/csv_dashboard/frontend/src/pages/SP500Return.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { CircularProgress, Box, Typography, Container, Grid, Card, CardContent, Button } from '@mui/material';\nimport { API_URL } from '../config.ts';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst SP500Return = () => {\n  _s();\n  const [assetsData, setAssetsData] = useState([]);\n  const [lpplData, setLpplData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedAsset, setSelectedAsset] = useState(null);\n  const assets = [{\n    symbol: '^GSPC',\n    name: 'S&P 500'\n  }, {\n    symbol: 'GC=F',\n    name: 'Gold'\n  }, {\n    symbol: '^TNX',\n    name: 'Interest Rate'\n  }, {\n    symbol: 'BTC-USD',\n    name: 'Bitcoin'\n  }];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all assets data\n        const assetsDataPromises = assets.map(async asset => {\n          const response = await fetch(`${API_URL}/api/v1/stock-data/symbol/${asset.symbol}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${asset.name} data`);\n          }\n          const data = await response.json();\n          console.log(`Raw data for ${asset.name}:`, data); // Debug log\n\n          // Normalize the data once when received\n          const normalizedData = data.map(item => ({\n            ...item,\n            normalized_price: (item.close_price - Math.min(...data.map(d => d.close_price))) / (Math.max(...data.map(d => d.close_price)) - Math.min(...data.map(d => d.close_price)))\n          }));\n          console.log(`Normalized data for ${asset.name}:`, normalizedData); // Debug log\n          return {\n            ...asset,\n            data: normalizedData\n          };\n        });\n        const assetsData = await Promise.all(assetsDataPromises);\n        setAssetsData(assetsData);\n\n        // Fetch LPPL AI data\n        const lpplResponse = await fetch(`${API_URL}/api/v1/lppl-ai-data/`);\n        if (!lpplResponse.ok) {\n          throw new Error('Failed to fetch LPPL AI data');\n        }\n        const lpplAiData = await lpplResponse.json();\n        console.log('Raw LPPL AI data:', lpplAiData); // Debug log\n\n        // Normalize LPPL AI data once when received\n        const normalizedLpplData = lpplAiData.map(item => ({\n          ...item,\n          normalized_dtcai: (item.dtcai - Math.min(...lpplAiData.map(d => d.dtcai))) / (Math.max(...lpplAiData.map(d => d.dtcai)) - Math.min(...lpplAiData.map(d => d.dtcai)))\n        }));\n        console.log('Normalized LPPL AI data:', normalizedLpplData); // Debug log\n        setLpplData(normalizedLpplData);\n      } catch (err) {\n        console.error('Error fetching data:', err); // Debug log\n        setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n  const selectedAssetData = selectedAsset ? assetsData.find(asset => asset.symbol === selectedAsset) : null;\n  const getLastFiveYearsData = data => {\n    if (!data || data.length === 0) {\n      console.log('No data available for filtering'); // Debug log\n      return [];\n    }\n\n    // Create fixed start and end dates\n    const startDate = new Date('2020-01-01');\n    const endDate = new Date('2025-12-31');\n\n    // Filter and sort the data\n    const filteredData = data.filter(item => {\n      const itemDate = new Date(item.date);\n      return itemDate >= startDate && itemDate <= endDate;\n    }).sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n    console.log('Filtered data:', filteredData); // Debug log\n    return filteredData;\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short'\n    });\n  };\n  const chartData = selectedAssetData ? {\n    labels: getLastFiveYearsData(selectedAssetData.data).map(item => formatDate(item.date)),\n    datasets: [{\n      label: `${selectedAssetData.name} (Normalized)`,\n      data: getLastFiveYearsData(selectedAssetData.data).map(item => item.normalized_price),\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.1)',\n      tension: 0.1,\n      fill: true\n    }, ...(selectedAsset === '^GSPC' ? [{\n      label: 'LPPL DTCAI (Normalized)',\n      data: getLastFiveYearsData(lpplData).map(item => item.normalized_dtcai),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.1)',\n      tension: 0.1,\n      fill: true\n    }] : [])]\n  } : null;\n  console.log('Chart data:', chartData); // Debug log\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: selectedAssetData ? selectedAsset === '^GSPC' ? `Normalized ${selectedAssetData.name} and LPPL DTCAI Comparison (2020-2025)` : `Normalized ${selectedAssetData.name} (2020-2025)` : ''\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(4)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Normalized Value'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        },\n        min: '2020-01-01',\n        max: '2025-12-31',\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45,\n          autoSkip: true,\n          maxTicksLimit: 10,\n          callback: function (value, index, values) {\n            const date = new Date(this.getLabelForValue(value));\n            // Show year for January of each year\n            if (date.getMonth() === 0) {\n              return date.getFullYear().toString();\n            }\n            // Show month for every 6 months\n            if (date.getMonth() % 6 === 0) {\n              return date.toLocaleDateString('en-US', {\n                month: 'short'\n              });\n            }\n            return '';\n          }\n        },\n        grid: {\n          display: true,\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    }\n  };\n  if (selectedAsset && chartData) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        bgcolor: 'background.paper',\n        zIndex: 1000,\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => setSelectedAsset(null),\n        sx: {\n          mb: 2\n        },\n        children: \"Back to Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 'calc(100vh - 100px)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"LPPL AI Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"img\",\n        src: \"/yonsei_univ_photo.png\",\n        alt: \"Yonsei University\",\n        sx: {\n          width: '100%',\n          maxWidth: '1200px',\n          height: 'auto',\n          mb: 4,\n          display: 'block',\n          mx: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mb: 4\n        },\n        children: assets.map(asset => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              cursor: 'pointer',\n              bgcolor: selectedAsset === asset.symbol ? 'primary.light' : 'background.paper',\n              border: '2px solid #1976d2',\n              '&:hover': {\n                bgcolor: 'primary.light',\n                opacity: 0.8\n              }\n            },\n            onClick: () => setSelectedAsset(asset.symbol),\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                align: \"center\",\n                children: asset.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, asset.symbol, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(SP500Return, \"hVuDUOnc9oXh9WEhepcm2EPqCb4=\");\n_c = SP500Return;\nexport default SP500Return;\nvar _c;\n$RefreshReg$(_c, \"SP500Return\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CircularProgress","Box","Typography","Container","Grid","Card","CardContent","Button","API_URL","jsxDEV","_jsxDEV","register","SP500Return","_s","assetsData","setAssetsData","lpplData","setLpplData","loading","setLoading","error","setError","selectedAsset","setSelectedAsset","assets","symbol","name","fetchData","assetsDataPromises","map","asset","response","fetch","ok","Error","data","json","console","log","normalizedData","item","normalized_price","close_price","Math","min","d","max","Promise","all","lpplResponse","lpplAiData","normalizedLpplData","normalized_dtcai","dtcai","err","message","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","selectedAssetData","find","getLastFiveYearsData","length","startDate","Date","endDate","filteredData","filter","itemDate","date","sort","a","b","getTime","formatDate","dateString","toLocaleDateString","year","month","chartData","labels","datasets","label","borderColor","backgroundColor","tension","fill","options","responsive","plugins","legend","position","title","text","tooltip","callbacks","context","dataset","value","parsed","y","toFixed","scales","beginAtZero","x","ticks","maxRotation","minRotation","autoSkip","maxTicksLimit","callback","index","values","getLabelForValue","getMonth","getFullYear","toString","grid","interaction","intersect","mode","sx","top","left","right","bottom","bgcolor","zIndex","p","variant","onClick","mb","height","maxWidth","mt","component","gutterBottom","src","alt","width","mx","container","spacing","xs","sm","cursor","border","opacity","align","_c","$RefreshReg$"],"sources":["/Users/gangminlee/Projects/QFL/csv_dashboard/frontend/src/pages/SP500Return.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { CircularProgress, Box, Typography, Container, Grid, Card, CardContent, Button } from '@mui/material';\nimport { API_URL } from '../config.ts';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface StockData {\n  date: string;\n  close_price: number;\n}\n\ninterface LPPLAIData {\n  date: string;\n  close_price: number;\n  dtcai: number;\n  color: string;\n}\n\ninterface AssetData {\n  symbol: string;\n  name: string;\n  data: StockData[];\n}\n\nconst SP500Return: React.FC = () => {\n  const [assetsData, setAssetsData] = useState<AssetData[]>([]);\n  const [lpplData, setLpplData] = useState<LPPLAIData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedAsset, setSelectedAsset] = useState<string | null>(null);\n\n  const assets = [\n    { symbol: '^GSPC', name: 'S&P 500' },\n    { symbol: 'GC=F', name: 'Gold' },\n    { symbol: '^TNX', name: 'Interest Rate' },\n    { symbol: 'BTC-USD', name: 'Bitcoin' }\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all assets data\n        const assetsDataPromises = assets.map(async (asset) => {\n          const response = await fetch(`${API_URL}/api/v1/stock-data/symbol/${asset.symbol}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${asset.name} data`);\n          }\n          const data = await response.json();\n          console.log(`Raw data for ${asset.name}:`, data); // Debug log\n          \n          // Normalize the data once when received\n          const normalizedData = data.map((item: StockData) => ({\n            ...item,\n            normalized_price: (item.close_price - Math.min(...data.map(d => d.close_price))) / \n                            (Math.max(...data.map(d => d.close_price)) - Math.min(...data.map(d => d.close_price)))\n          }));\n          console.log(`Normalized data for ${asset.name}:`, normalizedData); // Debug log\n          return { ...asset, data: normalizedData };\n        });\n\n        const assetsData = await Promise.all(assetsDataPromises);\n        setAssetsData(assetsData);\n\n        // Fetch LPPL AI data\n        const lpplResponse = await fetch(`${API_URL}/api/v1/lppl-ai-data/`);\n        if (!lpplResponse.ok) {\n          throw new Error('Failed to fetch LPPL AI data');\n        }\n        const lpplAiData = await lpplResponse.json();\n        console.log('Raw LPPL AI data:', lpplAiData); // Debug log\n        \n        // Normalize LPPL AI data once when received\n        const normalizedLpplData = lpplAiData.map((item: LPPLAIData) => ({\n          ...item,\n          normalized_dtcai: (item.dtcai - Math.min(...lpplAiData.map(d => d.dtcai))) / \n                          (Math.max(...lpplAiData.map(d => d.dtcai)) - Math.min(...lpplAiData.map(d => d.dtcai)))\n        }));\n        console.log('Normalized LPPL AI data:', normalizedLpplData); // Debug log\n        setLpplData(normalizedLpplData);\n\n      } catch (err) {\n        console.error('Error fetching data:', err); // Debug log\n        setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  const selectedAssetData = selectedAsset ? assetsData.find(asset => asset.symbol === selectedAsset) : null;\n\n  const getLastFiveYearsData = (data: StockData[] | LPPLAIData[]) => {\n    if (!data || data.length === 0) {\n      console.log('No data available for filtering'); // Debug log\n      return [];\n    }\n\n    // Create fixed start and end dates\n    const startDate = new Date('2020-01-01');\n    const endDate = new Date('2025-12-31');\n    \n    // Filter and sort the data\n    const filteredData = data\n      .filter(item => {\n        const itemDate = new Date(item.date);\n        return itemDate >= startDate && itemDate <= endDate;\n      })\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n\n    console.log('Filtered data:', filteredData); // Debug log\n    return filteredData;\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short' });\n  };\n\n  const chartData = selectedAssetData ? {\n    labels: getLastFiveYearsData(selectedAssetData.data)\n      .map(item => formatDate(item.date)),\n    datasets: [\n      {\n        label: `${selectedAssetData.name} (Normalized)`,\n        data: getLastFiveYearsData(selectedAssetData.data)\n          .map(item => (item as any).normalized_price),\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        tension: 0.1,\n        fill: true,\n      },\n      ...(selectedAsset === '^GSPC' ? [{\n        label: 'LPPL DTCAI (Normalized)',\n        data: getLastFiveYearsData(lpplData)\n          .map(item => (item as any).normalized_dtcai),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.1)',\n        tension: 0.1,\n        fill: true,\n      }] : [])\n    ],\n  } : null;\n\n  console.log('Chart data:', chartData); // Debug log\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: selectedAssetData \n          ? selectedAsset === '^GSPC'\n            ? `Normalized ${selectedAssetData.name} and LPPL DTCAI Comparison (2020-2025)`\n            : `Normalized ${selectedAssetData.name} (2020-2025)`\n          : '',\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context: any) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(4)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Normalized Value'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        },\n        min: '2020-01-01',\n        max: '2025-12-31',\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45,\n          autoSkip: true,\n          maxTicksLimit: 10,\n          callback: function(value: any, index: number, values: any[]) {\n            const date = new Date(this.getLabelForValue(value));\n            // Show year for January of each year\n            if (date.getMonth() === 0) {\n              return date.getFullYear().toString();\n            }\n            // Show month for every 6 months\n            if (date.getMonth() % 6 === 0) {\n              return date.toLocaleDateString('en-US', { month: 'short' });\n            }\n            return '';\n          }\n        },\n        grid: {\n          display: true,\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index' as const,\n    },\n  };\n\n  if (selectedAsset && chartData) {\n    return (\n      <Box sx={{ \n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        bgcolor: 'background.paper',\n        zIndex: 1000,\n        p: 3\n      }}>\n        <Button \n          variant=\"contained\" \n          onClick={() => setSelectedAsset(null)}\n          sx={{ mb: 2 }}\n        >\n          Back to Assets\n        </Button>\n        <Box sx={{ height: 'calc(100vh - 100px)' }}>\n          <Line data={chartData} options={options} />\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          LPPL AI Analysis\n        </Typography>\n        <Box \n          component=\"img\"\n          src=\"/yonsei_univ_photo.png\"\n          alt=\"Yonsei University\"\n          sx={{\n            width: '100%',\n            maxWidth: '1200px',\n            height: 'auto',\n            mb: 4,\n            display: 'block',\n            mx: 'auto'\n          }}\n        />\n        <Grid container spacing={2} sx={{ mb: 4 }}>\n          {assets.map((asset) => (\n            <Grid item xs={6} sm={3} key={asset.symbol}>\n              <Card \n                sx={{ \n                  cursor: 'pointer',\n                  bgcolor: selectedAsset === asset.symbol ? 'primary.light' : 'background.paper',\n                  border: '2px solid #1976d2',\n                  '&:hover': {\n                    bgcolor: 'primary.light',\n                    opacity: 0.8\n                  }\n                }}\n                onClick={() => setSelectedAsset(asset.symbol)}\n              >\n                <CardContent>\n                  <Typography variant=\"h6\" align=\"center\">\n                    {asset.name}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SP500Return; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}