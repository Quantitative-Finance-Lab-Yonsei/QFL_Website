{"ast":null,"code":"var _jsxFileName = \"/Users/gangminlee/Projects/QFL/csv_dashboard/frontend/src/pages/SP500Return.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { CircularProgress, Box, Typography, Container, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { API_URL } from '../config.ts';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n// Normalization function\nconst normalizeData = data => {\n  const min = Math.min(...data);\n  const max = Math.max(...data);\n  return data.map(value => (value - min) / (max - min));\n};\nconst SP500Return = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [lpplData, setLpplData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedAsset, setSelectedAsset] = useState('^GSPC');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch selected asset data\n        const assetResponse = await fetch(`${API_URL}/api/v1/stock-data/symbol/${selectedAsset}`);\n        if (!assetResponse.ok) {\n          throw new Error(`Failed to fetch ${selectedAsset} data`);\n        }\n        const assetData = await assetResponse.json();\n        setData(assetData);\n\n        // Fetch LPPL AI data\n        const lpplResponse = await fetch(`${API_URL}/api/v1/lppl-ai-data/`);\n        if (!lpplResponse.ok) {\n          throw new Error('Failed to fetch LPPL AI data');\n        }\n        const lpplAiData = await lpplResponse.json();\n        setLpplData(lpplAiData);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [selectedAsset]);\n  const handleAssetChange = event => {\n    setSelectedAsset(event.target.value);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Normalize the data\n  const normalizedAsset = normalizeData(data.map(item => item.close_price));\n  const normalizedLPPL = normalizeData(lpplData.map(item => item.dtcai));\n  const getAssetName = symbol => {\n    switch (symbol) {\n      case '^GSPC':\n        return 'S&P 500';\n      case 'GC=F':\n        return 'Gold';\n      case '^TNX':\n        return 'Interest Rate';\n      case 'BTC-USD':\n        return 'Bitcoin';\n      default:\n        return symbol;\n    }\n  };\n  const chartData = {\n    labels: data.map(item => item.date),\n    datasets: [{\n      label: `${getAssetName(selectedAsset)} (Normalized)`,\n      data: normalizedAsset,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.1)',\n      tension: 0.1,\n      fill: true\n    }, {\n      label: 'LPPL AI DTC (Normalized)',\n      data: normalizedLPPL,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.1)',\n      tension: 0.1,\n      fill: true\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: `Normalized ${getAssetName(selectedAsset)} and LPPL AI DTC Comparison`\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(4)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Normalized Value'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Asset and LPPL AI Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"asset-select-label\",\n            children: \"Select Asset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"asset-select-label\",\n            id: \"asset-select\",\n            value: selectedAsset,\n            label: \"Select Asset\",\n            onChange: handleAssetChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"^GSPC\",\n              children: \"S&P 500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"GC=F\",\n              children: \"Gold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"^TNX\",\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"BTC-USD\",\n              children: \"Bitcoin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '600px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(SP500Return, \"AdMz6qP3nYIOMNu3WaElvuVpaq0=\");\n_c = SP500Return;\nexport default SP500Return;\nvar _c;\n$RefreshReg$(_c, \"SP500Return\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CircularProgress","Box","Typography","Container","FormControl","InputLabel","Select","MenuItem","API_URL","jsxDEV","_jsxDEV","register","normalizeData","data","min","Math","max","map","value","SP500Return","_s","setData","lpplData","setLpplData","loading","setLoading","error","setError","selectedAsset","setSelectedAsset","fetchData","assetResponse","fetch","ok","Error","assetData","json","lpplResponse","lpplAiData","err","message","handleAssetChange","event","target","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","normalizedAsset","item","close_price","normalizedLPPL","dtcai","getAssetName","symbol","chartData","labels","date","datasets","label","borderColor","backgroundColor","tension","fill","options","responsive","plugins","legend","position","title","text","tooltip","callbacks","context","dataset","parsed","y","toFixed","scales","beginAtZero","x","interaction","intersect","mode","maxWidth","sx","mt","mb","variant","component","gutterBottom","fullWidth","id","labelId","onChange","height","_c","$RefreshReg$"],"sources":["/Users/gangminlee/Projects/QFL/csv_dashboard/frontend/src/pages/SP500Return.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { CircularProgress, Box, Typography, Container, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { API_URL } from '../config.ts';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface StockData {\n  date: string;\n  close_price: number;\n}\n\ninterface LPPLAIData {\n  date: string;\n  close_price: number;\n  dtcai: number;\n  color: string;\n}\n\n// Normalization function\nconst normalizeData = (data: number[]): number[] => {\n  const min = Math.min(...data);\n  const max = Math.max(...data);\n  return data.map(value => (value - min) / (max - min));\n};\n\nconst SP500Return: React.FC = () => {\n  const [data, setData] = useState<StockData[]>([]);\n  const [lpplData, setLpplData] = useState<LPPLAIData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedAsset, setSelectedAsset] = useState<string>('^GSPC');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch selected asset data\n        const assetResponse = await fetch(`${API_URL}/api/v1/stock-data/symbol/${selectedAsset}`);\n        if (!assetResponse.ok) {\n          throw new Error(`Failed to fetch ${selectedAsset} data`);\n        }\n        const assetData = await assetResponse.json();\n        setData(assetData);\n\n        // Fetch LPPL AI data\n        const lpplResponse = await fetch(`${API_URL}/api/v1/lppl-ai-data/`);\n        if (!lpplResponse.ok) {\n          throw new Error('Failed to fetch LPPL AI data');\n        }\n        const lpplAiData = await lpplResponse.json();\n        setLpplData(lpplAiData);\n\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [selectedAsset]);\n\n  const handleAssetChange = (event: any) => {\n    setSelectedAsset(event.target.value);\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  // Normalize the data\n  const normalizedAsset = normalizeData(data.map(item => item.close_price));\n  const normalizedLPPL = normalizeData(lpplData.map(item => item.dtcai));\n\n  const getAssetName = (symbol: string) => {\n    switch (symbol) {\n      case '^GSPC': return 'S&P 500';\n      case 'GC=F': return 'Gold';\n      case '^TNX': return 'Interest Rate';\n      case 'BTC-USD': return 'Bitcoin';\n      default: return symbol;\n    }\n  };\n\n  const chartData = {\n    labels: data.map(item => item.date),\n    datasets: [\n      {\n        label: `${getAssetName(selectedAsset)} (Normalized)`,\n        data: normalizedAsset,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        tension: 0.1,\n        fill: true,\n      },\n      {\n        label: 'LPPL AI DTC (Normalized)',\n        data: normalizedLPPL,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.1)',\n        tension: 0.1,\n        fill: true,\n      }\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: `Normalized ${getAssetName(selectedAsset)} and LPPL AI DTC Comparison`,\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context: any) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(4)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Normalized Value'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index' as const,\n    },\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Asset and LPPL AI Analysis\n        </Typography>\n        <Box sx={{ mb: 4 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"asset-select-label\">Select Asset</InputLabel>\n            <Select\n              labelId=\"asset-select-label\"\n              id=\"asset-select\"\n              value={selectedAsset}\n              label=\"Select Asset\"\n              onChange={handleAssetChange}\n            >\n              <MenuItem value=\"^GSPC\">S&P 500</MenuItem>\n              <MenuItem value=\"GC=F\">Gold</MenuItem>\n              <MenuItem value=\"^TNX\">Interest Rate</MenuItem>\n              <MenuItem value=\"BTC-USD\">Bitcoin</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n        <Box sx={{ height: '600px', position: 'relative' }}>\n          <Line data={chartData} options={options} />\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SP500Return; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}