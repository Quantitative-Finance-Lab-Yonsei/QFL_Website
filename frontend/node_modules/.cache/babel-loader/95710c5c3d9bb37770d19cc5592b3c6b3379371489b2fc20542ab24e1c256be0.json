{"ast":null,"code":"var _jsxFileName = \"/Users/gangminlee/Projects/QFL/csv_dashboard/frontend/src/pages/SP500Return.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { CircularProgress, Box, Typography, Container, Grid, Card, CardContent } from '@mui/material';\nimport { API_URL } from '../config.ts';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n// Normalization function\nconst normalizeData = data => {\n  const min = Math.min(...data);\n  const max = Math.max(...data);\n  return data.map(value => (value - min) / (max - min));\n};\nconst SP500Return = () => {\n  _s();\n  const [assetsData, setAssetsData] = useState([]);\n  const [lpplData, setLpplData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const assets = [{\n    symbol: '^GSPC',\n    name: 'S&P 500'\n  }, {\n    symbol: 'GC=F',\n    name: 'Gold'\n  }, {\n    symbol: '^TNX',\n    name: 'Interest Rate'\n  }, {\n    symbol: 'BTC-USD',\n    name: 'Bitcoin'\n  }];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all assets data\n        const assetsDataPromises = assets.map(async asset => {\n          const response = await fetch(`${API_URL}/api/v1/stock-data/symbol/${asset.symbol}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${asset.name} data`);\n          }\n          const data = await response.json();\n          return {\n            ...asset,\n            data\n          };\n        });\n        const assetsData = await Promise.all(assetsDataPromises);\n        setAssetsData(assetsData);\n\n        // Fetch LPPL AI data\n        const lpplResponse = await fetch(`${API_URL}/api/v1/lppl-ai-data/`);\n        if (!lpplResponse.ok) {\n          throw new Error('Failed to fetch LPPL AI data');\n        }\n        const lpplAiData = await lpplResponse.json();\n        setLpplData(lpplAiData);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  const createChartData = assetData => {\n    const normalizedAsset = normalizeData(assetData.map(item => item.close_price));\n    const normalizedLPPL = normalizeData(lpplData.map(item => item.dtcai));\n    return {\n      labels: assetData.map(item => item.date),\n      datasets: [{\n        label: 'Asset (Normalized)',\n        data: normalizedAsset,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        tension: 0.1,\n        fill: true\n      }, {\n        label: 'LPPL AI DTC (Normalized)',\n        data: normalizedLPPL,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.1)',\n        tension: 0.1,\n        fill: true\n      }]\n    };\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(4)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Normalized Value'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Asset and LPPL AI Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: assetsData.map(asset => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: asset.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: '400px',\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  data: createChartData(asset.data),\n                  options: {\n                    ...chartOptions,\n                    plugins: {\n                      ...chartOptions.plugins,\n                      title: {\n                        display: true,\n                        text: `Normalized ${asset.name} and LPPL AI DTC Comparison`\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, asset.symbol, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(SP500Return, \"NZWLYDl5j0Racl3xqJ2DFUZ5Tl8=\");\n_c = SP500Return;\nexport default SP500Return;\nvar _c;\n$RefreshReg$(_c, \"SP500Return\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CircularProgress","Box","Typography","Container","Grid","Card","CardContent","API_URL","jsxDEV","_jsxDEV","register","normalizeData","data","min","Math","max","map","value","SP500Return","_s","assetsData","setAssetsData","lpplData","setLpplData","loading","setLoading","error","setError","assets","symbol","name","fetchData","assetsDataPromises","asset","response","fetch","ok","Error","json","Promise","all","lpplResponse","lpplAiData","err","message","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","createChartData","assetData","normalizedAsset","item","close_price","normalizedLPPL","dtcai","labels","date","datasets","label","borderColor","backgroundColor","tension","fill","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","tooltip","callbacks","context","dataset","parsed","y","toFixed","scales","beginAtZero","title","text","x","interaction","intersect","mode","maxWidth","sx","mt","mb","variant","component","gutterBottom","container","spacing","xs","md","height","options","_c","$RefreshReg$"],"sources":["/Users/gangminlee/Projects/QFL/csv_dashboard/frontend/src/pages/SP500Return.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { CircularProgress, Box, Typography, Container, Grid, Card, CardContent } from '@mui/material';\nimport { API_URL } from '../config.ts';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface StockData {\n  date: string;\n  close_price: number;\n}\n\ninterface LPPLAIData {\n  date: string;\n  close_price: number;\n  dtcai: number;\n  color: string;\n}\n\ninterface AssetData {\n  symbol: string;\n  name: string;\n  data: StockData[];\n}\n\n// Normalization function\nconst normalizeData = (data: number[]): number[] => {\n  const min = Math.min(...data);\n  const max = Math.max(...data);\n  return data.map(value => (value - min) / (max - min));\n};\n\nconst SP500Return: React.FC = () => {\n  const [assetsData, setAssetsData] = useState<AssetData[]>([]);\n  const [lpplData, setLpplData] = useState<LPPLAIData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const assets = [\n    { symbol: '^GSPC', name: 'S&P 500' },\n    { symbol: 'GC=F', name: 'Gold' },\n    { symbol: '^TNX', name: 'Interest Rate' },\n    { symbol: 'BTC-USD', name: 'Bitcoin' }\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all assets data\n        const assetsDataPromises = assets.map(async (asset) => {\n          const response = await fetch(`${API_URL}/api/v1/stock-data/symbol/${asset.symbol}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${asset.name} data`);\n          }\n          const data = await response.json();\n          return { ...asset, data };\n        });\n\n        const assetsData = await Promise.all(assetsDataPromises);\n        setAssetsData(assetsData);\n\n        // Fetch LPPL AI data\n        const lpplResponse = await fetch(`${API_URL}/api/v1/lppl-ai-data/`);\n        if (!lpplResponse.ok) {\n          throw new Error('Failed to fetch LPPL AI data');\n        }\n        const lpplAiData = await lpplResponse.json();\n        setLpplData(lpplAiData);\n\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  const createChartData = (assetData: StockData[]) => {\n    const normalizedAsset = normalizeData(assetData.map(item => item.close_price));\n    const normalizedLPPL = normalizeData(lpplData.map(item => item.dtcai));\n\n    return {\n      labels: assetData.map(item => item.date),\n      datasets: [\n        {\n          label: 'Asset (Normalized)',\n          data: normalizedAsset,\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.1)',\n          tension: 0.1,\n          fill: true,\n        },\n        {\n          label: 'LPPL AI DTC (Normalized)',\n          data: normalizedLPPL,\n          borderColor: 'rgb(255, 99, 132)',\n          backgroundColor: 'rgba(255, 99, 132, 0.1)',\n          tension: 0.1,\n          fill: true,\n        }\n      ],\n    };\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context: any) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(4)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Normalized Value'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index' as const,\n    },\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Asset and LPPL AI Analysis\n        </Typography>\n        <Grid container spacing={3}>\n          {assetsData.map((asset) => (\n            <Grid item xs={12} md={6} key={asset.symbol}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    {asset.name}\n                  </Typography>\n                  <Box sx={{ height: '400px', position: 'relative' }}>\n                    <Line \n                      data={createChartData(asset.data)} \n                      options={{\n                        ...chartOptions,\n                        plugins: {\n                          ...chartOptions.plugins,\n                          title: {\n                            display: true,\n                            text: `Normalized ${asset.name} and LPPL AI DTC Comparison`\n                          }\n                        }\n                      }} \n                    />\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SP500Return; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}