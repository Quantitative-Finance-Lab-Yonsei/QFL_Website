{"ast":null,"code":"var _jsxFileName = \"/Users/gangminlee/Projects/QFL/csv_dashboard/frontend/src/pages/SP500Return.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { CircularProgress, Box, Typography, Container, Grid, Card, CardContent } from '@mui/material';\nimport { API_URL } from '../config.ts';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n// Normalization function\nconst normalizeData = data => {\n  const min = Math.min(...data);\n  const max = Math.max(...data);\n  return data.map(value => (value - min) / (max - min));\n};\nconst SP500Return = () => {\n  _s();\n  const [assetsData, setAssetsData] = useState([]);\n  const [lpplData, setLpplData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedAsset, setSelectedAsset] = useState('^GSPC');\n  const assets = [{\n    symbol: '^GSPC',\n    name: 'S&P 500'\n  }, {\n    symbol: 'GC=F',\n    name: 'Gold'\n  }, {\n    symbol: '^TNX',\n    name: 'Interest Rate'\n  }, {\n    symbol: 'BTC-USD',\n    name: 'Bitcoin'\n  }];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all assets data\n        const assetsDataPromises = assets.map(async asset => {\n          const response = await fetch(`${API_URL}/api/v1/stock-data/symbol/${asset.symbol}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${asset.name} data`);\n          }\n          const data = await response.json();\n          return {\n            ...asset,\n            data\n          };\n        });\n        const assetsData = await Promise.all(assetsDataPromises);\n        setAssetsData(assetsData);\n\n        // Fetch LPPL AI data\n        const lpplResponse = await fetch(`${API_URL}/api/v1/lppl-ai-data/`);\n        if (!lpplResponse.ok) {\n          throw new Error('Failed to fetch LPPL AI data');\n        }\n        const lpplAiData = await lpplResponse.json();\n        setLpplData(lpplAiData);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n  const selectedAssetData = assetsData.find(asset => asset.symbol === selectedAsset);\n  if (!selectedAssetData) return null;\n  const normalizedAsset = normalizeData(selectedAssetData.data.map(item => item.close_price));\n  const normalizedLPPL = normalizeData(lpplData.map(item => item.dtcai));\n  const chartData = {\n    labels: selectedAssetData.data.map(item => item.date),\n    datasets: [{\n      label: `${selectedAssetData.name} (Normalized)`,\n      data: normalizedAsset,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.1)',\n      tension: 0.1,\n      fill: true\n    }, {\n      label: 'LPPL AI DTC (Normalized)',\n      data: normalizedLPPL,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.1)',\n      tension: 0.1,\n      fill: true\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: `Normalized ${selectedAssetData.name} and LPPL AI DTC Comparison`\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(4)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Normalized Value'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Asset and LPPL AI Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mb: 4\n        },\n        children: assets.map(asset => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              cursor: 'pointer',\n              bgcolor: selectedAsset === asset.symbol ? 'primary.light' : 'background.paper',\n              '&:hover': {\n                bgcolor: 'primary.light',\n                opacity: 0.8\n              }\n            },\n            onClick: () => setSelectedAsset(asset.symbol),\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                align: \"center\",\n                children: asset.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, asset.symbol, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '600px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(SP500Return, \"0FQhvwdFf7vDfm123Woe8+c0WQc=\");\n_c = SP500Return;\nexport default SP500Return;\nvar _c;\n$RefreshReg$(_c, \"SP500Return\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CircularProgress","Box","Typography","Container","Grid","Card","CardContent","API_URL","jsxDEV","_jsxDEV","register","normalizeData","data","min","Math","max","map","value","SP500Return","_s","assetsData","setAssetsData","lpplData","setLpplData","loading","setLoading","error","setError","selectedAsset","setSelectedAsset","assets","symbol","name","fetchData","assetsDataPromises","asset","response","fetch","ok","Error","json","Promise","all","lpplResponse","lpplAiData","err","message","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","selectedAssetData","find","normalizedAsset","item","close_price","normalizedLPPL","dtcai","chartData","labels","date","datasets","label","borderColor","backgroundColor","tension","fill","options","responsive","plugins","legend","position","title","text","tooltip","callbacks","context","dataset","parsed","y","toFixed","scales","beginAtZero","x","interaction","intersect","mode","maxWidth","sx","mt","mb","variant","component","gutterBottom","container","spacing","xs","sm","cursor","bgcolor","opacity","onClick","align","height","_c","$RefreshReg$"],"sources":["/Users/gangminlee/Projects/QFL/csv_dashboard/frontend/src/pages/SP500Return.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { CircularProgress, Box, Typography, Container, Grid, Card, CardContent } from '@mui/material';\nimport { API_URL } from '../config.ts';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface StockData {\n  date: string;\n  close_price: number;\n}\n\ninterface LPPLAIData {\n  date: string;\n  close_price: number;\n  dtcai: number;\n  color: string;\n}\n\ninterface AssetData {\n  symbol: string;\n  name: string;\n  data: StockData[];\n}\n\n// Normalization function\nconst normalizeData = (data: number[]): number[] => {\n  const min = Math.min(...data);\n  const max = Math.max(...data);\n  return data.map(value => (value - min) / (max - min));\n};\n\nconst SP500Return: React.FC = () => {\n  const [assetsData, setAssetsData] = useState<AssetData[]>([]);\n  const [lpplData, setLpplData] = useState<LPPLAIData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedAsset, setSelectedAsset] = useState<string>('^GSPC');\n\n  const assets = [\n    { symbol: '^GSPC', name: 'S&P 500' },\n    { symbol: 'GC=F', name: 'Gold' },\n    { symbol: '^TNX', name: 'Interest Rate' },\n    { symbol: 'BTC-USD', name: 'Bitcoin' }\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all assets data\n        const assetsDataPromises = assets.map(async (asset) => {\n          const response = await fetch(`${API_URL}/api/v1/stock-data/symbol/${asset.symbol}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${asset.name} data`);\n          }\n          const data = await response.json();\n          return { ...asset, data };\n        });\n\n        const assetsData = await Promise.all(assetsDataPromises);\n        setAssetsData(assetsData);\n\n        // Fetch LPPL AI data\n        const lpplResponse = await fetch(`${API_URL}/api/v1/lppl-ai-data/`);\n        if (!lpplResponse.ok) {\n          throw new Error('Failed to fetch LPPL AI data');\n        }\n        const lpplAiData = await lpplResponse.json();\n        setLpplData(lpplAiData);\n\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  const selectedAssetData = assetsData.find(asset => asset.symbol === selectedAsset);\n  if (!selectedAssetData) return null;\n\n  const normalizedAsset = normalizeData(selectedAssetData.data.map(item => item.close_price));\n  const normalizedLPPL = normalizeData(lpplData.map(item => item.dtcai));\n\n  const chartData = {\n    labels: selectedAssetData.data.map(item => item.date),\n    datasets: [\n      {\n        label: `${selectedAssetData.name} (Normalized)`,\n        data: normalizedAsset,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        tension: 0.1,\n        fill: true,\n      },\n      {\n        label: 'LPPL AI DTC (Normalized)',\n        data: normalizedLPPL,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.1)',\n        tension: 0.1,\n        fill: true,\n      }\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: `Normalized ${selectedAssetData.name} and LPPL AI DTC Comparison`,\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context: any) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(4)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'Normalized Value'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index' as const,\n    },\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Asset and LPPL AI Analysis\n        </Typography>\n        <Grid container spacing={2} sx={{ mb: 4 }}>\n          {assets.map((asset) => (\n            <Grid item xs={6} sm={3} key={asset.symbol}>\n              <Card \n                sx={{ \n                  cursor: 'pointer',\n                  bgcolor: selectedAsset === asset.symbol ? 'primary.light' : 'background.paper',\n                  '&:hover': {\n                    bgcolor: 'primary.light',\n                    opacity: 0.8\n                  }\n                }}\n                onClick={() => setSelectedAsset(asset.symbol)}\n              >\n                <CardContent>\n                  <Typography variant=\"h6\" align=\"center\">\n                    {asset.name}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n        <Box sx={{ height: '600px', position: 'relative' }}>\n          <Line data={chartData} options={options} />\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SP500Return; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}